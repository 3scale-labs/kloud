apiVersion: apps/v1
kind: Deployment
metadata:
#  creationTimestamp: null
  labels:
    app: {{ APP_LABEL }}
    threescale_component: backend
    threescale_component_element: cron
  name: backend-cron
spec:
  replicas: 1
  selector:
    matchLabels:
      deployment: backend-cron
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
#      intervalSeconds: 1
#      timeoutSeconds: 1200
#      updatePeriodSeconds: 1
    type: RollingUpdate
  template:
    metadata:
#      creationTimestamp: null
      labels:
        app: {{ APP_LABEL }}
        deployment: backend-cron
        threescale_component: backend
        threescale_component_element: cron
    spec:
      containers:
      - args:
        - backend-cron
        env:
        - name: CONFIG_REDIS_PROXY
          valueFrom:
            secretKeyRef:
              key: REDIS_STORAGE_URL
              name: backend-redis
        - name: CONFIG_REDIS_SENTINEL_HOSTS
          valueFrom:
            secretKeyRef:
              key: REDIS_STORAGE_SENTINEL_HOSTS
              name: backend-redis
        - name: CONFIG_REDIS_SENTINEL_ROLE
          valueFrom:
            secretKeyRef:
              key: REDIS_STORAGE_SENTINEL_ROLE
              name: backend-redis
        - name: CONFIG_QUEUES_MASTER_NAME
          valueFrom:
            secretKeyRef:
              key: REDIS_QUEUES_URL
              name: backend-redis
        - name: CONFIG_QUEUES_SENTINEL_HOSTS
          valueFrom:
            secretKeyRef:
              key: REDIS_QUEUES_SENTINEL_HOSTS
              name: backend-redis
        - name: CONFIG_QUEUES_SENTINEL_ROLE
          valueFrom:
            secretKeyRef:
              key: REDIS_QUEUES_SENTINEL_ROLE
              name: backend-redis
        - name: RACK_ENV
          valueFrom:
            configMapKeyRef:
              key: RACK_ENV
              name: backend-environment
        image: {{ AMP_BACKEND_IMAGE }}
        imagePullPolicy: IfNotPresent
        name: backend-cron
        resources: {}
      initContainers:
      - command:
        - /opt/app/entrypoint.sh
        - sh
        - -c
        - until rake connectivity:redis_storage_queue_check; do sleep $SLEEP_SECONDS;
          done
        env:
        - name: CONFIG_REDIS_PROXY
          valueFrom:
            secretKeyRef:
              key: REDIS_STORAGE_URL
              name: backend-redis
        - name: CONFIG_REDIS_SENTINEL_HOSTS
          valueFrom:
            secretKeyRef:
              key: REDIS_STORAGE_SENTINEL_HOSTS
              name: backend-redis
        - name: CONFIG_REDIS_SENTINEL_ROLE
          valueFrom:
            secretKeyRef:
              key: REDIS_STORAGE_SENTINEL_ROLE
              name: backend-redis
        - name: CONFIG_QUEUES_MASTER_NAME
          valueFrom:
            secretKeyRef:
              key: REDIS_QUEUES_URL
              name: backend-redis
        - name: CONFIG_QUEUES_SENTINEL_HOSTS
          valueFrom:
            secretKeyRef:
              key: REDIS_QUEUES_SENTINEL_HOSTS
              name: backend-redis
        - name: CONFIG_QUEUES_SENTINEL_ROLE
          valueFrom:
            secretKeyRef:
              key: REDIS_QUEUES_SENTINEL_ROLE
              name: backend-redis
        - name: RACK_ENV
          valueFrom:
            configMapKeyRef:
              key: RACK_ENV
              name: backend-environment
        - name: SLEEP_SECONDS
          value: "1"
        image: {{ AMP_BACKEND_IMAGE }}
        name: backend-redis-svc
        resources: {}
      serviceAccountName: amp
